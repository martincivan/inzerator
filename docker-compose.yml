version: "3.8"
services:
  builder:
    profiles:
      - cli
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    command: bash
    volumes:
      - ./:/app-root
    environment:
      DATABASE_URL: "postgres://user:admin@db:5432/inzerator"
    depends_on:
      db:
        condition: service_healthy
  runner:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    volumes:
      - ./:/app-root
    environment:
      DATABASE_URL: "postgres://user:admin@db:5432/inzerator"
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: admin
    volumes:
      - local_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
      interval: 3s
      timeout: 60s
      retries: 30
      start_period: 5s
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: a@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    user: "0:0"
    environment:
      GF_DATABASE_TYPE: postgres
      GF_DATABASE_HOST: db:5432
      GF_DATABASE_NAME: grafana
      GF_DATABASE_USER: user
      GF_DATABASE_PASSWORD: admin
      GF_DATABASE_SSL_MODE: disable
    restart: unless-stopped
    depends_on:
      pg_grafana:
        condition: service_healthy
    ports:
      - 3111:3000
    volumes:
      - grafana:/var/lib/grafana
volumes:
  local_pgdata:
  pgadmin-data: